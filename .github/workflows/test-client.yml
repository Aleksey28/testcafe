name: Test Client

on:
  workflow_call:
    inputs:
      test-script:
        required: true
        type: string
jobs:
  before:
    uses: ./.github/workflows/test-hook-before.yml
    with:
      os: ubuntu-latest

  test:
    needs: before
    runs-on: ubuntu-latest
    environment: test-client
    env:
      SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
      SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
    outputs:
      execution-failed: ${{ steps.execution-result.outputs.failed }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{github.event.inputs.merged_sha || github.event.inputs.sha}}

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: actions/github-script@v6
        with:
          script: |
            const delay = ms => new Promise(resolve => setTimeout(resolve, ms));

            let artifacts = {};

            for(let i = 0;i<36&&!artifacts.total_count;i++,await delay(5000)) {
              try {
                ({ data: artifacts } = await github.rest.actions.listWorkflowRunArtifacts({
                repo: context.repo.repo,
                owner: context.repo.owner,
                run_id: context.payload.inputs.deploy_run_id
              }));
              }
              catch (e) {
                console.log(e);
              }
            }

            const { data: artifact } = await github.request(artifacts.artifacts.find(artifact=> artifact.name === 'npm').archive_download_url);
            require('fs').writeFileSync(require('path').join(process.env.GITHUB_WORKSPACE, 'package.zip'), Buffer.from(artifact))

      - run: |
          unzip package.zip
          tar --strip-components=1 -xzf testcafe-*.tgz

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - run: ${{ inputs.test-script }}
        timeout-minutes: 60
      - name: Set failed flag
        id: execution-result
        run: echo "failed=true" >> "$GITHUB_OUTPUT"
        if: failure() || cancelled()

  after:
    needs: test
    uses: ./.github/workflows/test-hook-after.yml
    with:
      os: ${{ inputs.os }}
      execution-failed: ${{ fromJSON(needs.test.outputs.execution-failed || 'false') }}